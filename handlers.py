import asyncio
import datetime
import json

from aiogram import F, Router
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, CallbackQuery
from aiohttp.web_routedef import route

from calendar_myad import main as money_recount
import keyboard as kb
router = Router()
class Add(StatesGroup):
    name = State()
    price = State()

with open("config.json") as file:
    config = json.load(file)
admin_ids = config["ids"]

@router.message(CommandStart())
async def start(message: Message):
    if message.from_user.id in admin_ids:
        if message.from_user.id in config["ids"]:
            await message.answer('–ü—Ä–∏–≤–µ—Ç\n–ù–∞–ø–∏—à–∏ /help —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥',
                         reply_markup= kb.maink)

@router.message(Command('help'))
async def get_help(message: Message):
    if message.from_user.id in admin_ids:
        await message.answer("–ö–æ–º–∞–Ω–¥—ã: /add - –û–ø–ª–∞—Ç–∞ —É—á–µ–Ω–∏–∫–∞")


@router.message(F.text == "üí∞üí∞üí∞–ü–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å babosikiüí∞üí∞üí∞")
async def recount (message: Message):
    if message.from_user.id in admin_ids:
        money_recount()
        with open("babkibabkisukababki.json") as file:
            money = json.load(file)
        await message.answer('–ò–Ω–¥–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —É—á–µ–Ω–∏–∫–∏')
        for i in money["–£—á–µ–Ω–∏–∫–∏"]:
            if money["–£—á–µ–Ω–∏–∫–∏"][i] < 0:
                await message.answer(f'–î–æ–ª–≥ {i} —Ä–∞–≤–µ–Ω: {money["–£—á–µ–Ω–∏–∫–∏"][i]}')
            elif money["–£—á–µ–Ω–∏–∫–∏"][i] > 0:
                await message.answer(f'–û—Å—Ç–∞—Ç–æ–∫ {i} —Ä–∞–≤–µ–Ω: {money["–£—á–µ–Ω–∏–∫–∏"][i]}')
            else:
                await message.answer(f'{i} –ö—Ä–∞—Å–∞–≤—á–∏–∫, –¥–æ–ª–≥ —Ä–∞–≤–µ–Ω: {money["–£—á–µ–Ω–∏–∫–∏"][i]}')
        if len(money["–ì—Ä—É–ø–ø—ã"]) != 0:
            await message.answer('–ì—Ä—É–ø–ø—ã')
            for i in money["–ì—Ä—É–ø–ø—ã"]:
                newgroup = ''
                for j in money["–ì—Ä—É–ø–ø—ã"][i]:
                    if money["–ì—Ä—É–ø–ø—ã"][i][j] < 0:
                        newgroup += f'–î–æ–ª–≥ {j} —Ä–∞–≤–µ–Ω: {money["–ì—Ä—É–ø–ø—ã"][i][j]}\n'
                    elif money["–ì—Ä—É–ø–ø—ã"][i][j] < 0:
                        newgroup += f'–û—Å—Ç–∞—Ç–æ–∫ {j} —Ä–∞–≤–µ–Ω: {money["–ì—Ä—É–ø–ø—ã"][i][j]}\n'
                    else:
                        newgroup += f'{j} –ö—Ä–∞—Å–∞–≤—á–∏–∫, –¥–æ–ª–≥ —Ä–∞–≤–µ–Ω: {money["–ì—Ä—É–ø–ø—ã"][i][j]}\n'
                await message.answer(f'–ì—Ä—É–ø–ø–∞ {money["–ì—Ä—É–ø–ø–∞"][i]}\n{newgroup}')


@router.message(Command("add"))
async def addmoney(message: Message, state: FSMContext):
    if message.from_user.id in admin_ids:
        await state.set_state(Add.name)
        stringa = '–í—ã–±–µ—Ä–∏ –æ–¥–Ω–æ–≥–æ:\n'
        with open("babkibabkisukababki.json") as file:
            babosiki = json.load(file)
        for i in babosiki:
            stringa += f'`{i}`\n'
        stringa += '\n–í—ã–±–µ—Ä–∏—Ç–µ –∏ –ø—Ä–∏—à–ª–∏—Ç–µ 1 –∏–∑ —ç—Ç–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤'
        await message.answer(stringa,
                       parse_mode="MARKDOWN")

@router.message(Add.name)
async def getname(message: Message, state: FSMContext):
    if message.from_user.id in admin_ids:
        with open("babkibabkisukababki.json") as file:
            data = json.load(file)
            if message.text not in data:
                await message.answer('–Ω–µ—Ç—É —Ç–∞–∫–æ–≥–æ')
                await state.clear()
                return
        await state.update_data(name = message.text)
        await state.set_state(Add.price)
        await message.answer('–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –æ–ø–ª–∞—á–µ–Ω–æ denyzhek)))')

@router.message(Add.price)
async def getprice(message: Message, state: FSMContext):
#–î–û–ë–ê–í–õ–Æ –ü–û–¢–û–ú –í–û–ó–ú–û–ñ–ù–û–°–¢–¨ –†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨ –ò –í–°–Ø –§–ò–ì–ù–Ø–í–ê–ß–ö–ê
    if message.from_user.id in admin_ids:
        await state.update_data(price = message.text)
        data = await state.get_data()
        with open("babkibabkisukababki.json") as file:
            dat = json.load(file)
        dat[data["name"]] += int(data["price"])
        with open("babkibabkisukababki.json", "w") as fil:
            json.dump(dat, fil)
        await state.clear()
